app-id: com.merrythieves.RyzenMasterCommander
runtime: org.kde.Platform
runtime-version: '6.9'
sdk: org.kde.Sdk
command: ryzen-master-commander
finish-args:
  - --share=ipc
  - --socket=x11
  - --socket=wayland
  # - --socket=network  # Explicitly enable network access
  - --device=dri
  - --device=all
  - --filesystem=host
  - --system-talk-name=org.freedesktop.PolicyKit1
  - --talk-name=org.freedesktop.Notifications

modules:
  - name: ryzenadj
    buildsystem: cmake
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
    sources:
      - type: git
        url: https://github.com/FlyGoat/RyzenAdj.git
        tag: v0.16.0
    cleanup:
      - /include
      - /lib/pkgconfig

  - name: nbfc
    buildsystem: simple
    build-commands:
      - make
      - install -Dm755 src/nbfc ${FLATPAK_DEST}/bin/nbfc
      - install -Dm755 src/ec_probe ${FLATPAK_DEST}/bin/ec-probe
      - install -Dm755 src/nbfc_service ${FLATPAK_DEST}/bin/nbfc_service || echo "nbfc_service not found, skipping"
    sources:
      - type: git
        url: https://github.com/nbfc-linux/nbfc-linux.git
        tag: 0.3.16

  - name: pciutils
    buildsystem: simple
    build-commands:
      - make PREFIX=/usr SHARED=yes
      - make PREFIX=/usr SHARED=yes DESTDIR=${FLATPAK_DEST} install install-lib
    sources:
      - type: archive
        url: https://mirrors.edge.kernel.org/pub/software/utils/pciutils/pciutils-3.9.0.tar.gz
        sha256: 01f5b9ee8eff577e9953a43bafb3ead76e0654a7288dc26d79627074956fb1e0
    cleanup:
      - /share/man

  - name: libdrm
    buildsystem: meson
    sources:
      - type: git
        url: https://gitlab.freedesktop.org/mesa/drm.git
        tag: libdrm-2.4.114

  # All Python dependencies in one step
  # In the python-packages module:
  - name: python-packages
    buildsystem: simple
    build-commands:
      - echo "--- Flatpak Build Environment Info (python-packages module) ---"
      - echo "SDK Python version:"
      - python3 --version
      - echo "SDK pip version:"
      - pip3 --version
      - echo "Contents of build directory (${FLATPAK_BUILDER_BUILDDIR}) where pip looks for wheels:"
      - ls -la ${FLATPAK_BUILDER_BUILDDIR}
      - echo "--- End Info ---"
      # The requirements.txt file should be at the root of ${FLATPAK_BUILDER_BUILDDIR}
      # due to the 'sources:' entry below.
      - pip3 install --no-index --find-links=file://${FLATPAK_BUILDER_BUILDDIR} --prefix=${FLATPAK_DEST} -r requirements.txt
    sources:
      # Source 1: The Python wheels from your pre-filled cache.
      # The *contents* of flatpak-pip-cache will be copied to ${FLATPAK_BUILDER_BUILDDIR}.
      - type: dir
        path: ../../flatpak-pip-cache
      # Source 2: The requirements.txt file from your project root.
      # This will copy 'requirements.txt' into ${FLATPAK_BUILDER_BUILDDIR}.
      - type: file
        path: ../../requirements.txt

  - name: ryzen-master-commander
    buildsystem: simple
    build-commands:
      - pip3 install --prefix=${FLATPAK_DEST} .
      - mkdir -p ${FLATPAK_DEST}/share/applications
      - mkdir -p ${FLATPAK_DEST}/share/icons/hicolor/128x128/apps
      - cp share/applications/ryzen-master-commander.desktop ${FLATPAK_DEST}/share/applications/
      - cp share/icons/hicolor/128x128/apps/ryzen-master-commander.png ${FLATPAK_DEST}/share/icons/hicolor/128x128/apps/
      - chmod +x ${FLATPAK_DEST}/bin/ryzen-master-commander
    sources:
      - type: dir
        path: ../..
        skip:
          - .git
          - .venv
          - builds